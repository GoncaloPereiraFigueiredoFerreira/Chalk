extends base


block channel_cont
  .grid.grid-cols-8.grid-rows-3.gap-4
    
    input(type='hidden' id='channel_id' value=channel._id)
    //About section
    .col-span-8(class='md:col-span-2  md:row-start-1')
      .p-4.h-full.flex.flex-col.bg-white.border.border-gray-200.rounded-lg.shadow(class='sm:p-8 dark:bg-gray-800 dark:border-gray-700')
        .flex.items-center.justify-between.mb-4
          h5.text-xl.font-bold.leading-none.text-gray-900(class='dark:text-white') About this channel:
        p(class='dark:text-white') #{channel.description}
        .mt-auto(class='dark:text-white')
          p.font-bold Publishers:
          ul
            each pub in channel.publishers
              li #{pub}
      
    // Announcement titles
    .col-span-8(class='md:col-span-6  md:row-start-1')
      .p-4.h-full.bg-white.border.border-gray-200.rounded-lg.shadow(class='sm:p-8 dark:bg-gray-800 dark:border-gray-700')
        .flex.items-center.justify-between.mb-4
          h5.text-xl.font-bold.leading-none.text-gray-900(class='dark:text-white') Announcements
          div
            a.text-sm.inline-flex.font-medium.text-blue-600(href='/channel/posts/'+channel._id class='hover:underline dark:text-blue-500')
              | View all
            if channel.role=="pub" || user.role=="admin"
              a.ml-4.text-sm.inline-flex.font-medium.text-blue-600(href='/channel/addpost/'+channel._id class='hover:underline dark:text-blue-500')
                | Add Post

        .flow-root
          ul.divide-y.divide-gray-200(role='list' class='dark:divide-gray-700')
            each ann in titles 
              li.py-3(class='sm:py-4')
                .flex.items-center.space-x-4.justify-between
                  div
                    a.text-gray-900.truncate(href="/channel/posts/"+channel._id+"?post="+ann._id class='hover:underline dark:text-blue-500')
                      | #{ann.title}
                    p.mt-2.text-xs.text-gray-600.truncate(class="dark:text-white")
                      | Por: #{ann.publisher}

                  p.text-sm.font-medium.text-gray-900.truncate(class="dark:text-white")
                    | #{ann.date}

    // Content Tab
    .col-span-8(class='md:col-start-3 md:col-end-9 md:row-start-2 md:row-end-3')
      .mb-5.flex.items-center.justify-between
        h5.text-2xl.font-bold.leading-none.text-gray-900(class='dark:text-white') Content
        label.sr-only(for='table-search') Search
        .relative
          .absolute.inset-y-0.left-0.flex.items-center.pl-3.pointer-events-none
            svg.w-5.h-5.text-gray-500(class='dark:text-gray-400' aria-hidden='true' fill='currentColor' viewbox='0 0 20 20' xmlns='http://www.w3.org/2000/svg')
              path(fill-rule='evenodd' d='M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z' clip-rule='evenodd')
          input#table-search.block.p-2.pl-10.text-sm.text-gray-900.border.border-gray-300.rounded-lg.w-80.bg-gray-50(type='text' class='focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500' placeholder='Search for files') 

      // Table of contents
      .relative.bg-white.h-80.overflow-x-auto.shadow-md(class='sm:rounded-lg dark:bg-gray-800')
        table.table-fixed.w-full.text-sm.text-left.text-gray-500.overflow-x-auto(id="folders" class='dark:text-gray-400')
          thead.text-xs.text-gray-700(class='dark:bg-gray-700 dark:text-gray-400')
            // Table head with current and past folders
            nav.flex.items-center.justify-between.px-5.py-3.text-gray-800.bg-gray-50(class='dark:bg-gray-800 dark:border-gray-700')
              ol.inline-flex.items-center.space-x-1(class='md:space-x-3' id="dirnav")
              if channel.role=="pub" || user.role=="admin"
                a.ml-4.text-sm.inline-flex.font-medium.text-blue-600(id='add_dir' href='/channel/' + channel._id + '/adddir?dir=""' class='hover:underline dark:text-blue-500')
                  | Add Directory
                a.ml-4.text-sm.inline-flex.font-medium.text-blue-600(id='add_file' href='/channel/' + channel._id + '/addfile?dir=""' class='hover:underline dark:text-blue-500')
                  | Add File
              a.text-white.bg-blue-700.font-medium.rounded-lg.text-sm.w-full.px-5.text-center(id='download_multiple_files' href="/channel/" + channel._id + "/files" class='hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 sm:w-auto py-2.5 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800') Download Selected Files

            tr.hidden
              th Filename
              th Filetype
              th Tags
              th FileSize
              if channel.role=="pub"
                th remove

          tbody

    // Important Dates
    .col-span-8(class='md:col-span-2  md:row-start-2')
      .w-full.p-4.bg-white.border.border-gray-200.rounded-lg.shadow(class='sm:p-8 dark:bg-gray-800 dark:border-gray-700')
        .flex.items-center.justify-between.mb-4
          h5.text-xl.font-bold.leading-none.text-gray-900(class='dark:text-white') Important Dates

          if channel.role=="pub" || user.role=="admin"
            a.ml-4.text-sm.inline-flex.font-medium.text-blue-600(href='/channel/adddate/'+channel._id class='hover:underline dark:text-blue-500')
              | Add date

        .flow-root
          ul.divide-y.divide-gray-200(role='list' class='dark:divide-gray-700')
            each date in dates
              li.py-3.w-full(class='sm:py-4')
                .flex.justify-between
                  .flex.items-center.space-x-4
                    p.text-sm.font-medium.text-gray-900.truncate(class="dark:text-white")
                      | #{date.date}
                    if !date.delivery || channel.role=="" || channel.role=="pub"  || user.role=="admin"
                      p.font-medium.text-gray-900.truncate(class="dark:text-white")
                        | #[strong #{date.title}]
                    else
                      a.underline.text-red-700.font-medium.text-gray-900.truncate(href="/channel/"+channel._id+"/submitForm/"+date._id class="dark:text-white")
                        | #[strong Entrega:  #{date.title}]
                  if channel.role=="pub" || user.role=="admin"
                    a(href="/channel/remdate/"+channel._id+"?date="+date._id)   
                      svg(width='42px' height='42px' viewbox='-798.72 -798.72 2621.44 2621.44' xmlns='http://www.w3.org/2000/svg' fill='#000000' stroke='#000000')
                        g(stroke-width='0')
                          g(stroke-linecap='round' stroke-linejoin='round')
                            g
                              path(fill='#ff0000' d='M195.2 195.2a42 42 0 0 1 90.496 0L512 421.504 738.304 195.2a64 64 0 0 1 90.496 90.496L602.496 512 828.8 738.304a64 64 0 0 1-90.496 90.496L512 602.496 285.696 828.8a64 64 0 0 1-90.496-90.496L421.504 512 195.2 285.696a64 64 0 0 1 0-90.496z')

                p.mt-1.text-xs.text-gray-600.truncate(class="dark:text-white")
                    | #{date.description}

  script.
    var files = #{folders};
    var current = files;
    var path = ["Home"]
    var downloaded = []
    var search = {}
    let tableRows = $('#folders').find('tbody')


    function findNestedObj(entireObj, keyToFind) {
      let foundObj = {};
      JSON.stringify(entireObj, (nestedkey, nestedvalue) => {
        if (nestedkey.toUpperCase().search(keyToFind.toUpperCase())!==-1 && nestedvalue["type"]==="file") {
          foundObj[nestedkey] = nestedvalue
        }
        return nestedvalue;
      });
      return foundObj;
    };

    function formatFilesize(filesize){
      if (filesize < 1000){
        return filesize + " B"
      }
      else if (filesize < 1000000){
        filesize = filesize / 1000
        filesize = filesize.toFixed(1)
        return filesize + " KB"
      }
      else if (filesize < 1000000000){
        filesize = filesize / 1000000
        filesize = filesize.toFixed(1)
        return filesize + " MB"
      }
      else{
        filesize = filesize / 1000000000
        filesize = filesize.toFixed(1)
        return filesize + " GB"
      }
    }

    function findIDIndex(array, id){
      let res = -1
      for(let i = 0; i < array.length; i++){
        if (array[i] === id){
          res = array[i]
          break
        }
      }

      return res
    }



    function composeFolderSearch(){
 
      let fils=[]
      for (let i in search){
          let dic = {}
          dic["metadata"] = search[i]["metadata"]
          fils.push({name: i, file: dic})
      }
      
      for (let f of fils){
        let checkbox = $('<td>').attr("class","px-6 py-4")
        let checkbox_input = $('<input>').attr('id', f.file.metadata._id).attr('type', 'checkbox').attr('value', "1").attr('class', "w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600")
        checkbox.append(checkbox_input)

        let tr = $('<tr>').attr('id', f.name).attr("class","flex cursor-pointer justify-between bg-white dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600")
        let file= $("<object>").attr("class","w-4 h-4 mr-2 dark:invert").attr("data",'/images/svgs/file.svg').attr("type",'image/svg+xml')
        let name = $('<td>').attr("data-file",  f.file.metadata._id).attr("class","click_file w-full flex items-center px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white")
        let textspan = $('<span>').attr("class","w-56 truncate overflow-hidden").text(f.name)
        name.append(file).append(textspan)
        let format = $('<td>').attr("data-file",f.file.metadata._id).attr("class","click_file  w-full  px-6 py-4").text(f.file.metadata.file_type)
        let tags = $('<td>').attr("data-file",f.file.metadata._id).attr("class","click_file  w-full  px-6 py-4 overflow-hidden")
        if (f.file.metadata.tags.length > 0){
            let tagList =$('<span>')
            for (let tagID of f.file.metadata.tags){
              let tag = $("<span>").attr('class', 'ml-3 p-1 text-sm text-gray-500 bg-white border border-gray-200 rounded-lg shadow-sm dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800').text(tagID)
              tagList.append(tag)
            }
            tags.append(tagList)
        }
        

        let fileSize = $('<td>').attr("data-file",f.file.metadata._id).attr("class","click_file  w-full  px-6 py-4").text(formatFilesize(f.file.metadata.file_size))
        let dwnld= $("<img>").attr("class","dark:invert").attr("src",'/images/svgs/download.svg')
        let dwnl_a = $('<a>').attr("href", '/channel/' + $("#channel_id").val() + '/file/download/' + f.file.metadata._id)
        let tr_dwnl = $('<td>').attr("class","w-32 px-6 py-4").append(dwnl_a.append(dwnld))

        tableRows.append(tr.append(checkbox).append(name).append(tags).append(format).append(fileSize).append(tr_dwnl))
       }
      $(".click_file").each(function(index, value) {
        $(this).on("click",function(){
            window.location.href = '/channel/' + $("#channel_id").val() + '/file/' + this.dataset.file;
        })})

      $('input').each(function(index, value){
        if ($(this).attr('type') === 'checkbox'){
          let id = $(this).attr('id')
          $('#' + id).change(function(){
            if(this.checked) {
              downloaded.push(id)
            }
            else{
              let index = findIDIndex(downloaded, id)
              downloaded.splice(index, 1)
            }

            let res = ''
            for (let i = 0; i < downloaded.length; i++){
              if (i != 0)
                res += ';' + downloaded[i]
              else
                res = downloaded[i]
            } 
            $('#download_multiple_files').attr('href', '/channel/' + $("#channel_id").val() +  '/files?files=\"' + res + '\"')
          })
        }
      })

      $(".click_dir").each(function(index, value) {
        $(this).on("click",function(){
          downloaded = []
          tableRows.empty();
          let dir_ = ''
          path.push(this.dataset.directory);
          for (let i in path){
            if (i != 0)
              dir_ = dir_ + '/' + path[i]
          }
          $('#add_dir').attr('href', '/channel/' + $("#channel_id").val() + '/adddir?dir=\"' + dir_ + '\"')
          $('#add_file').attr('href', '/channel/' + $("#channel_id").val() + '/addfile?dir=\"' + dir_ + '\"')
          composeFolder()
        })
      })


      $("#dirnav > li > a").each(function(index, value) {
         $(this).on("click",function(){
            downloaded = []
            let flag = false 
            let counter = path.length -1
            while (!flag){
                if (this.text != path[counter]){
                  path.splice(counter, 1); 
                }
                else
                  flag=true
                counter--
            }
            
            let dir_ = ''
            for (let i in path){
              if (i != 0)
                dir_ = dir_ + '/' + path[i]
            }
            tableRows.empty();
            $('#add_dir').attr('href', '/channel/' + $("#channel_id").val() + '/adddir?dir=\"' + dir_ + '\"')
            $('#add_file').attr('href', '/channel/' + $("#channel_id").val() + '/addfile?dir=\"' + dir_ + '\"')
            composeFolder()
          }
         )
      })
    }

    $("#table-search").on("input", e=>{
      const value = e.target.value
      if (value.length==0) {
          tableRows.empty();
          composeFolder()
      }
      else{
          tableRows.empty();
          search = findNestedObj(files,value)
          composeFolderSearch()
      }
    })


    function composeFolder(){
      $("#dirnav").empty()
      for(let i in path){
          currP = path[i]
          let li = $('<li>').attr("class","inline-flex items-center text-gray-400")
          let a = $('<a>').attr("data-nav",currP).attr("href","#/").attr("class","inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white")
          if (currP =="Home"){
              let home= $("<object>").attr("class","w-4 h-4 mr-2 dark:invert").attr("data",'/images/svgs/home.svg').attr("type",'image/svg+xml')
              $("ol").append(li.append(a.append(home).append($("<span>").text(currP))))
          }
          else {
            let arrow= $("<span>").attr("class","mr-2 font-medium").text(">")
            $("ol").append(li.append([arrow, a.text(currP)]))
          }
           
          if (i == 0)
            current = files
          else current = current[currP].files
      }

      let dir = ''
      for (let i in path){
        if (i != 0)
          dir = dir + '/' + path[i]
      }

      dirs = []
      fils = []

      if ("" in current){
        root = current[""]
        for (let i in root.files){
          fils.push({name: i, file: root.files[i]})
        }
      }

      for (let i in current){
        let file = current[i]
        if (file.type == "dir"){
          dirs.push({name: i, dir: file})
        } 
        else if (file.type == "file"){
          fils.push({name: i, file: file})
        } 
      }

      dirs.sort(function(a, b){ return a.name.localeCompare(b.name) })
      fils.sort(function(a, b){ return a.name.localeCompare(b.name) })
      
      for (let i in dirs){
        let directory = dirs[i]
        if (directory.name != ''){
            let tag = $('<td>').attr("data-directory",directory.name).attr("class", "click_dir w-full flex items-center").append($("<div>").attr("class","border rounded-lg p-1").text("Directory"))
            let folder= $("<object>").attr("class","w-4 h-4 mr-2 dark:invert").attr("data",'/images/svgs/folder.svg').attr("type",'image/svg+xml')
            let td = $('<td>').attr("data-directory",directory.name).attr("class","click_dir w-full flex items-center px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white").append(folder)
            let name  = $('<span>').text(directory.name)
            let tr = $('<tr>').attr("class","flex cursor-pointer justify-between bg-white dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600")

            if (#{channel.role =="pub"}){            
              let tr_a = $('<td>').attr("class","px-6 py-4")
              let a = $('<a>').attr('href', '/channel/' + $("#channel_id").val() + '/rmdir/?context=\"' + dir + '\"' + '&dir=\"' + directory.name + '\"').text('X')
              tr_a.append(a)
              tableRows.append(tr.append(td.append(name)).append(tag).append(tr_a))
            }
            else{
                tableRows.append(tr.append(td.append(name)).append(tag))
            }
        }
      }

      for (let i in fils){
        let f = fils[i]

        let checkbox = $('<td>').attr("class","px-6 py-4")
        let checkbox_input = $('<input>').attr('id', f.file.metadata._id).attr('type', 'checkbox').attr('value', "1").attr('class', "w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600")
        checkbox.append(checkbox_input)

        let tr = $('<tr>').attr('id', f.name).attr("class","flex cursor-pointer justify-between bg-white dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600")
        let file= $("<object>").attr("class","w-4 h-4 mr-2 dark:invert").attr("data",'/images/svgs/file.svg').attr("type",'image/svg+xml')
        let name = $('<td>').attr("data-file",  f.file.metadata._id).attr("class","click_file w-full flex items-center px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white")
        let textspan = $('<span>').attr("class","w-56 truncate overflow-hidden").text(f.name)
        name.append(file).append(textspan)
        let format = $('<td>').attr("data-file",f.file.metadata._id).attr("class","click_file  text-center w-full  px-6 py-4").text(f.file.metadata.file_type)
        let tags = $('<td>').attr("data-file",f.file.metadata._id).attr("class","click_file  w-full text-center  px-6 py-4")

        if (f.file.metadata.tags.length > 0){
            let tagList =$('<span>')
            for (let tagID of f.file.metadata.tags){
              let tag = $("<span>").attr('class', 'ml-3 p-1 text-sm text-gray-500 bg-white border border-gray-200 rounded-lg shadow-sm dark:text-gray-400 dark:border-gray-600 dark:bg-gray-800').text(tagID)
              tagList.append(tag)
            }
            tags.append(tagList)
        }

        let fileSize = $('<td>').attr("data-file",f.file.metadata._id).attr("class","click_file  text-center w-full  px-6 py-4").text(formatFilesize(f.file.metadata.file_size))
        let dwnld= $("<img>").attr("class","dark:invert").attr("src",'/images/svgs/download.svg')
        let dwnl_a = $('<a>').attr("href", '/channel/' + $("#channel_id").val() + '/file/download/' + f.file.metadata._id)
        let tr_dwnl = $('<td>').attr("class","w-32 px-6 py-4").append(dwnl_a.append(dwnld))

        if (#{channel.role =="pub"}){       
            let tr_a = $('<td>').attr('id', '_'+f.name).attr("class","px-6 py-4")
            let a
            if (dir !== '')
              a = $('<a>').attr('href', '/channel/' + $("#channel_id").val() + '/rmfile/' + f.file.metadata._id + '?dir=\"' + dir + '\"').text('X')
            else 
              a = $('<a>').attr('href', '/channel/' + $("#channel_id").val() + '/rmfile/' + f.file.metadata._id).text('X')
            tr_a.append(a)
            tableRows.append(tr.append(checkbox).append(name).append(tags).append(format).append(fileSize).append(tr_dwnl).append(tr_a))
        }
        else{
            tableRows.append(tr.append(checkbox).append(name).append(tags).append(format).append(fileSize).append(tr_dwnl))
        }
      }

      $(".click_file").each(function(index, value) {
        $(this).on("click",function(){
            window.location.href = '/channel/' + $("#channel_id").val() + '/file/' + this.dataset.file;
        })})

      $('input').each(function(index, value){
        if ($(this).attr('type') === 'checkbox'){
          let id = $(this).attr('id')
          $('#' + id).change(function(){
            if(this.checked) {
              downloaded.push(id)
            }
            else{
              let index = findIDIndex(downloaded, id)
              downloaded.splice(index, 1)
            }

            let res = ''
            for (let i = 0; i < downloaded.length; i++){
              if (i != 0)
                res += ';' + downloaded[i]
              else
                res = downloaded[i]
            } 
            $('#download_multiple_files').attr('href', '/channel/' + $("#channel_id").val() +  '/files?files=\"' + res + '\"')
          })
        }
      })

      $(".click_dir").each(function(index, value) {
        $(this).on("click",function(){
          downloaded = []
          tableRows.empty();
          let dir_ = ''
          path.push(this.dataset.directory);
          for (let i in path){
            if (i != 0)
              dir_ = dir_ + '/' + path[i]
          }
          $('#add_dir').attr('href', '/channel/' + $("#channel_id").val() + '/adddir?dir=\"' + dir_ + '\"')
          $('#add_file').attr('href', '/channel/' + $("#channel_id").val() + '/addfile?dir=\"' + dir_ + '\"')
          composeFolder()
        })
      })


      $("#dirnav > li > a").each(function(index, value) {
         $(this).on("click",function(){
            downloaded = []
            let flag = false 
            let counter = path.length -1
            while (!flag){
                if (this.text != path[counter]){
                  path.splice(counter, 1); 
                }
                else
                  flag=true
                counter--
            }
            
            let dir_ = ''
            for (let i in path){
              if (i != 0)
                dir_ = dir_ + '/' + path[i]
            }
            tableRows.empty();
            $('#add_dir').attr('href', '/channel/' + $("#channel_id").val() + '/adddir?dir=\"' + dir_ + '\"')
            $('#add_file').attr('href', '/channel/' + $("#channel_id").val() + '/addfile?dir=\"' + dir_ + '\"')
            composeFolder()
          }
         )
      })
    }
    $(window).on('load', function() {
        composeFolder();
    })
        
     


  



      
              
                
